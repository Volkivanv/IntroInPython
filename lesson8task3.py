# 3: Давайте опишем пару сущностей player и enemy через словарь,
# который будет иметь ключи и значения:
# name - строка полученная от пользователя,
# health = 100,
# damage = 50.
# ### Поэкспериментируйте с значениями урона и жизней по желанию.
# # ### Теперь надо создать функцию attack(person1, person2).
# # Примечание: имена аргументов можете указать свои.
# # ### Функция в качестве аргумента будет принимать атакующего и атакуемого.
# # ### В теле функция должна получить параметр damage атакующего и отнять
# # это количество от health атакуемого. Функция должна сама работать со
# # словарями и изменять их значения.
# 4: Давайте усложним предыдущее задание. Измените сущности, добавив новый
# параметр - armor = 1.2 (величина брони персонажа)
# Теперь надо добавить новую функцию, которая будет вычислять и возвращать
# полученный урон по формуле damage / armor
# Следовательно, у вас должно быть 2 функции:
# Наносит урон. Это улучшенная версия функции из задачи 3.
# Вычисляет урон по отношению к броне.
#
# Примечание. Функция номер 2 используется внутри функции номер 1
# для вычисления урона и вычитания его из здоровья персонажа.

def attack(p1,p2):
    p2['health'] -= p1['damage'] / p2['armor']
    killed = p2['health'] < 0
    return killed


person1 = {'name': 'Pers1',
           'health': 100,
           'damage': 50,
           'armor': 1.2}

person2 = {'name': 'Pers2',
           'health': 150,
           'damage': 34,
           'armor': 1.5}
print(person1)
print(person2)
e = None
killed2 = False
killed1 = False
while e != 'e' and not killed1 and not killed2:
    e = input("Press any key for attack or 'e' for exit")
    killed2 = attack(person1, person2)
    killed1 = attack(person2, person1)
    print(person1)
    print(person2)
